version: 2
jobs:
  test_legacy:
    docker:
      - image: hadolint/hadolint:latest-debian
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: hadolint generic/DockerfileLegacy

  test:
    docker:
      - image: hadolint/hadolint:latest-debian
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: hadolint generic/Dockerfile

  build_8:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "8.16.0"
      LATEST_VERSION: "false"

  build_9:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "9.11.2"
      LATEST_VERSION: "false"

  build_10:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "10.16.0"
      LATEST_VERSION: "true"

  build_11:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "11.15.0"
      LATEST_VERSION: "false"

  build_12:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "12.4.0"
      LATEST_VERSION: "false"

  build_13:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "13.12.0"
      LATEST_VERSION: "false"

  build_14:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "14.18.0"
      LATEST_VERSION: "false"

  build_16:
    docker:
      - image: cimg/base:2022.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Docker images
          command: |
            MAJOR=$(echo ${NODE_VERSION} | cut -d '.' -f1)
            MINOR=$(echo ${NODE_VERSION} | cut -d '.' -f2)
            docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_PASS
            docker build -t ${DK_IMAGE}:${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target base generic
            docker build -t ${DK_IMAGE}:ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target ci generic
            docker build -t ${DK_IMAGE}:wkhtml-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf generic
            docker build -t ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} --build-arg SRC_TAG=${NODE_VERSION}-alpine --target wkhtmltopdf_ci generic
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:${MAJOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-${MAJOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            docker push ${DK_IMAGE}:${NODE_VERSION}
            docker push ${DK_IMAGE}:${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:${MAJOR}
            docker push ${DK_IMAGE}:ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:ci-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-${MAJOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}.${MINOR}
            docker push ${DK_IMAGE}:wkhtml-ci-${MAJOR}
            if [ "$LATEST_VERSION" == "true" ]; then
              docker tag ${DK_IMAGE}:${NODE_VERSION} ${DK_IMAGE}:latest
              docker tag ${DK_IMAGE}:ci-${NODE_VERSION} ${DK_IMAGE}:ci-latest
              docker tag ${DK_IMAGE}:wkhtml-${NODE_VERSION} ${DK_IMAGE}:wkhtml-latest
              docker tag ${DK_IMAGE}:wkhtml-ci-${NODE_VERSION} ${DK_IMAGE}:wkhtml-ci-latest
              docker push ${DK_IMAGE}:latest
              docker push ${DK_IMAGE}:ci-latest
              docker push ${DK_IMAGE}:wkhtml-latest
              docker push ${DK_IMAGE}:wkhtml-ci-latest
            fi
            docker images
    environment:
      DK_IMAGE: "cubyn/node"
      NODE_VERSION: "16.14.2"
      LATEST_VERSION: "false"

workflows:
  version: 2
  "node-8":
    jobs:
      - test_legacy
      - build_8:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-9":
    jobs:
      - test_legacy
      - build_9:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master

  "node-10":
    jobs:
      - test_legacy
      - build_10:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-11":
    jobs:
      - test_legacy
      - build_11:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-12":
    jobs:
      - test_legacy
      - build_12:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-13":
    jobs:
      - test_legacy
      - build_13:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-14":
    jobs:
      - test_legacy
      - build_14:
          context: cubyn_hub_docker
          requires:
            - test_legacy
          filters:
            branches:
              only: master
  "node-16":
    jobs:
      - test
      - build_16:
          context: cubyn_hub_docker
          requires:
            - test
          filters:
            branches:
              only: node-16
